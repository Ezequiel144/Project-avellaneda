---
import DescriptionMarkdown from "../../components/UserId/DescriptionMarkdown/DescriptionMarkdown.astro";
import PerfilUser from "../../components/UserId/PerfilUser/PerfilUser.astro";
//import listBusinesses from "../../data/business.data.json";
import type { BusinessItemUserId } from "../../interface/business";
import Layout from "../../layouts/Layout.astro";
import { strapiFetch } from "../../utils/fetch";

/* const { URL_STRAPI } = envVariants(); */

/* export async function getStaticPaths() {
  const res = await strapiFetch(
    "/businesses?populate[imagelogo][fields][0]=url&populate=galery&populate[frontpage][fields][0]=url&populate[tags]=*&populate[linksbuttons]=*&populate[socialmedia]=*",
    {
      method: "GET",
    }
  );
  const listBusinesses = res.data;
  return listBusinesses.map((item: BusinessItemUserId) => {
    return {
      params: { id: item.title },
      props: { currentBusiness: item },
    };
  });
} */

const { id } = Astro.params;

const current = async () => {
  const res = await strapiFetch(
    "/businesses?populate[imagelogo][fields][0]=url&populate=galery&populate[frontpage][fields][0]=url&populate[tags]=*&populate[linksbuttons]=*&populate[socialmedia]=*",
    {
      method: "GET",
    }
  );
  const listBusinesses = res.data as BusinessItemUserId[];
  const findBusine = listBusinesses.find((item) => item.id.toString() === id);
  return findBusine;
};

const currentBusiness = await current();

/* const { currentBusiness } = Astro.props as {
  currentBusiness: BusinessItemUserId;
}; */
/* const currentBusiness = listBusinesses
  ? listBusinesses.find((item: Business) => item.id === _id)
  : null; */

//console.log(currentBusiness ? currentBusiness : "Business not found");

const pageTitle = `${currentBusiness?.title} | Informes Avellaneda`;
const pageDescription = currentBusiness?.shortdescription;
const openGraphImage = currentBusiness?.imagelogo.url;
---

<Layout
  title={pageTitle}
  description={pageDescription || ""}
  ogImage={openGraphImage}
>
  {
    currentBusiness ? (
      <section class="size-full flex flex-col gap-y-9 h-fit">
        <article class=" h-[400px] md:h-[590px] w-full ">
          <img
            src={`${currentBusiness.frontpage.url}`}
            alt="imagen-front"
            class="size-full object-cover -z-10"
            onerror="this.onerror=null; this.src='/image/no-image.png';"
          />
        </article>
        <PerfilUser
          imageLogo={currentBusiness.imagelogo.url}
          title={currentBusiness.title}
          tags={currentBusiness.tags}
          socialMedia={currentBusiness.socialmedia}
          galery={currentBusiness.galery || undefined}
        />
        <article class="mx-auto w-full max-w-[1200px] flex flex-col gap-y-9 px-3 xl:px-0 ">
          {/* <div class="w-full">
            <div
              class="long-description"
              set:html={marked(currentBusiness.longdescription)}
            />
          </div> */}
          <DescriptionMarkdown
            longdescription={currentBusiness.longdescription}
          />
          <div
            class={`gap-4 grid grid-cols-[repeat(auto-fit,minmax(300px,1fr))]`}
          >
            {currentBusiness.linksbuttons.map((item) => (
              <a
                href={item.link}
                class={` rounded-xl border border-red-500 text-red-500 text-center px-4 py-3 text-base md:text-xl font-semibold`}
              >
                {item.title}
              </a>
            ))}
          </div>
        </article>
      </section>
    ) : (
      <section class="size-full flex flex-col items-center justify-center">
        <h2 class="text-2xl font-bold text-red-500">Business not found</h2>
      </section>
    )
  }
</Layout>
